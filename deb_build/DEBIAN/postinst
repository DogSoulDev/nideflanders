#!/usr/bin/env bash
set -euo pipefail

# Post-install script for nideflanders .deb
# This runs as root during package installation.

ROOT=/opt/nideflanders
VENV="$ROOT/.venv"
USER=nidef

echo "[nideflanders postinst] creating service user and preparing installation"
# create user if not exists
if ! id -u "$USER" >/dev/null 2>&1; then
  adduser --system --group --no-create-home --home /nonexistent --quiet "$USER" || true
fi

if [ -d "$ROOT" ]; then
  # give ownership to service user
  chown -R "$USER:$USER" "$ROOT" || true

  # ensure var/lib and log dir
  mkdir -p /var/lib/nideflanders
  chown -R "$USER:$USER" /var/lib/nideflanders
  mkdir -p /var/log
  touch /var/log/nideflanders-postinst.log
  chown "$USER:$USER" /var/log/nideflanders-postinst.log || true

  # create virtualenv as the service user
  if [ ! -d "$VENV" ]; then
    su -s /bin/sh -c "python3 -m venv '$VENV'" "$USER" || true
  fi

  # install runtime requirements inside venv (as root but using venv pip)
  if [ -f "$ROOT/requirements.txt" ]; then
    "$VENV/bin/pip" install --upgrade pip || true
    "$VENV/bin/pip" install -r "$ROOT/requirements.txt" || true
  fi

  # Install wrapper in /usr/local/bin (runs as system user using venv)
  cat > /usr/local/bin/nideflanders <<'PY'
#!/usr/bin/env bash
source /opt/nideflanders/.venv/bin/activate
exec /opt/nideflanders/.venv/bin/python /opt/nideflanders/run.py
PY
  chmod 755 /usr/local/bin/nideflanders || true

  # Install systemd unit if provided
  if [ -f "$ROOT/packaging/systemd/nideflanders.service" ]; then
    cp "$ROOT/packaging/systemd/nideflanders.service" /etc/systemd/system/nideflanders.service || true
    systemctl daemon-reload || true
    systemctl enable --now nideflanders.service || true
  fi
fi

echo "[nideflanders postinst] done"

exit 0
